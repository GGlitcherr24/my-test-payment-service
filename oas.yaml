servers:
  - url: http://localhost:3000
  - description: URL for local dev and test
  - url: https://test-payment-service.com
  - description: prod URL


components:
  responses:
    NotFound:
      description: The spec resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Error:
      type: object
      properties:
        detail:
          type: string
        required:
          - detail

    OrderItemSchema:
      type: object
      required:
        - product
        - size
      properties:
        product:
          type: string
        size:
          type: string
          enum:
            - small
            - medium
            - big
        quantity:
          type: integer
          default: 1

    CreateOrderSchema:
      type: object
      required:
        - order
      properties:
        order:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/OrderItemSchema'

    GetOrderSchema:
      additionalProperties: false
      type: object
      required:
        - id
        - created
        - status
        - order
      properties:
        id:
          type: string
          format: uuid
        created:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - created
            - paid
            - progress
            - cancelled
            - dispatched
            - delivered
        order:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/OrderItemSchema'

  securitySchemes:
    openId:
      type: openIdConnect
      openIdConnectUrl: https://.....
    oauth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://.../token
          scopes: {}
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  security:
    - oath2:
        - getOrders
        - createOrder
        - getOrder
        - updateOrder
        - deleteOrder
        - payOrder
        - cancelOrder
    - bearerAuth:
        - getOrders
        - createOrder
        - getOrder
        - updateOrder
        - deleteOrder
        - payOrder
        - cancelOrder


paths:
  /orders:
    get:
      operationId: getOrders
      parameters:
        - name: cancelled
          in: query
          required: false
          schema:
            type: boolean
        - name: limit
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: A JSON array of orders
          content:
            application/json
          schema:
            type: object
            properties:
              orders:
                type: array
                items:
                  $ref: '#/components/schemas/GetOrderSchema'
            required:
              - order
    post:
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderSchema'
#              type: object
#              properties:
#                order:
#                  type: array
#                  items:
#                    type: object
#                    properties:
#                      product:
#                        type: string
#                      size:
#                        type: string
#                        enum:
#                          - small
#                          - medium
#                          - big
#                      quantity:
#                        type: integer
#                        required: false
#                        default: 1
#                  required:
#                    - product
#                    - size

  /orders/{order_id}:
    parameters:
      - in: path
        name: order_id
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: Returns the details of a specific order
      operation_id: getOrder
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderSchema'
        '404':
          $ref: '#/components/schemas/NotFound'
    put:
      operation_id: updateOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderSchema'
    delete:
      operation_id: deleteOrder

  /orders/{order_id}/pay:
    post:
      operation_id: payOrder

  /orders/{order_id}/cancel:
    post:
      operation_id: cancelOrder
